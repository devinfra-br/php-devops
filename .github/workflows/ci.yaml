name: Build and Push Docker Images

on:
  push:
    branches:
      - main
jobs:
  tagging_repo: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'        
      - name: Minor version for each merge
        id: taggerDryRun
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          WITH_V: 'true'
          DRY_RUN: 'true'

      - name: echo new tag
        run: |
          echo "The next tag version will be: ${{ steps.taggerDryRun.outputs.new_tag }}"
      - name: echo tag
        run: |
          echo "The current tag is: ${{ steps.taggerDryRun.outputs.tag }}"
      - name: echo part
        run: |
          echo "The version increment was: ${{ steps.taggerDryRun.outputs.part }}"     

      - name: Minor version for each merge
        id: taggerFinal
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          WITH_V: 'true'

  security_img_scan:
    runs-on: ubuntu-latest
    needs: [tagging_repo]
    strategy:
      matrix:
        phpVersion:
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3" 
    defaults:
      run:
        working-directory: ./gitops/docker/php/${{ matrix.phpVersion }}              
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build images 
        run: |
          docker build -t docker.io/${{ secrets.DOCKER_USERNAME }}/${{ matrix.phpVersion }}:${{ github.sha }} -f Dockerfile .
      
      - name: Security scan
        uses: docker://aquasec/trivy:0.19.2
        with:
          args: --exit-code 1 --severity HIGH,CRITICAL docker.io/${{ secrets.DOCKER_USERNAME }}/${{ matrix.phpVersion }}:${{ github.sha }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          #severity: 'CRITICAL,HIGH'
        continue-on-error: true  

  build_and_push:
    needs: security_img_scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        phpVersion:
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"         
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker meta latest
        id: metalatest
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ matrix.phpVersion }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Docker meta sha
        id: metasha
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ matrix.phpVersion }}
          tags: |
            type=sha,prefix=v-{{sha}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        id: docker_login
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push ${{ matrix.phpVersion }} image main
        uses: docker/build-push-action@v5
        id: docker_build_sha
        with:
          context: .
          file: ./gitops/docker/php/${{ matrix.phpVersion }}/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          push: true
          labels: ${{ steps.metasha.outputs.labels }}
          tags: |
            docker.io/${{ secrets.DOCKER_USERNAME }}/${{ matrix.phpVersion }}-${{ steps.metasha.outputs.tags }}

      - name: Build and push ${{ matrix.phpVersion }} image
        uses: docker/build-push-action@v5
        id: docker_build_latest
        with:
          context: .
          file: ./gitops/docker/php/${{ matrix.phpVersion }}/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          push: true
          labels: ${{ steps.metalatest.outputs.labels }}
          tags: |
            docker.io/${{ secrets.DOCKER_USERNAME }}/${{ matrix.phpVersion }}-${{ steps.metalatest.outputs.tags }}

      - name: Use output version latest
        id: output-version-latest
        run: echo ${{ steps.metalatest.outputs.tags }}            


      - name: Use output version sha
        id: output-version-sha
        run: echo ${{ steps.metasha.outputs.tags }}          